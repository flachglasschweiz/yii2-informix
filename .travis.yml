language: php

php:
  - "5.4"
  - "5.5"
  - "5.6"
  - "7.1"
  - "7.2"
  - "7.3"

services:
  - docker

env:
  - DELIMIDENT=n IFX_VERSION=12.10.FC12W1IE PDO_VERSION=latest

matrix:
  fast_finish: true
  include:
    - php: "5.6"
      env: DELIMIDENT=y IFX_VERSION=12.10.FC12W1IE PDO_VERSION=latest
    - php: "7.3"
      env: DELIMIDENT=y IFX_VERSION=12.10.FC12W1IE PDO_VERSION=latest

# cache composer dirs
cache:
  directories:
    - $HOME/.composer/cache

before_install:
  - sudo apt-get update -qq

  # Run the Informix docker image
  - docker network create testnetwork
  - docker run -td --network=testnetwork --name ifx --privileged -p 9088:9088 -e "LICENSE=accept" -e "DB_LOCALE=en_US.utf8" -e "CLIENT_LOCALE=en_US.utf8" -e "DBMONEY=Y4MD-" -e "DBDELIMITER='|'" ibmcom/informix-innovator-c:${IFX_VERSION}

  # Use takis to wait until the Informix DB initialization has finished
  - docker run --network=testnetwork -e CHECK_PORT=27017 -e CHECK_HOST=ifx giorgos/takis

  # Run the post-install script to add the sbspace and the test DB
  - docker cp ${TRAVIS_BUILD_DIR}/tests/ci/db/post_install.sh ifx:/home/informix/post_install.sh
  - docker exec -u root ifx bash -c "chmod +x /home/informix/post_install.sh"
  - docker exec ifx bash -c "/home/informix/post_install.sh"

  # Copy the required Informix libraries for the PDO extension into the host
  - mkdir -p /opt/ibm
  - docker cp ifx:/opt/ibm/informix /opt/ibm/informix
  - export INFORMIXDIR=/opt/ibm/informix

  # Compile and enable the Informix PDO extension
  - mkdir pdo_informix
  - if [ $PDO_VERSION = 'latest' ]; then export PDO_LINK="https://pecl.php.net/get/PDO_INFORMIX"; else export PDO_LINK="https://pecl.php.net/get/PDO_INFORMIX-${PDO_VERSION}.tgz"; fi
  - (cd pdo_informix/; wget $PDO_LINK -O pdo_informix.tgz && tar -xvf pdo_informix.tgz --strip 1)
  - (cd pdo_informix/; phpize && ./configure --with-pdo-informix=${INFORMIXDIR} && make && sudo make install)
  - echo "extension=pdo_informix.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - php -m | grep -i pdo
  - php -r "echo phpversion('pdo_informix'), PHP_EOL;"

install:
  # preparing Yii2 environment
  - travis_retry composer self-update && composer --version
  - export PATH="$HOME/.composer/vendor/bin:$PATH"

  # Update Composer dependencies
  - travis_retry composer update --prefer-dist --no-interaction
  # needed to use tests of Yii2
  - rm vendor/yiisoft/yii2-dev -Rf
  - travis_retry composer install --prefer-source -o --no-interaction

  - sed -i "s/DELIMIDENT=\w/DELIMIDENT=${DELIMIDENT}/g" tests/data/config.php

#before_script:
#  - |
#    if [ $TRAVIS_PHP_VERSION = '5.6' ] && [ $DELIMIDENT = 'n' ] && [ $IFX_VERSION = '12.10.FC12W1IE' ]; then
#      PHPUNIT_FLAGS="--coverage-clover=coverage.clover"
#    fi

script:
  - vendor/bin/phpunit --verbose $PHPUNIT_FLAGS

#after_script:
#  - |
#    if [ $TRAVIS_PHP_VERSION = '5.6' ] && [ $DELIMIDENT = 'n' ] && [ $IFX_VERSION = '12.10.FC12W1IE' ] && [ $PDO_VERSION = '1.3.1' ]; then
#      travis_retry wget https://scrutinizer-ci.com/ocular.phar
#      php ocular.phar code-coverage:upload --format=php-clover coverage.clover
#    fi
